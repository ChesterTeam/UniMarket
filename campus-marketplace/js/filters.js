/**
 * JavaScript –º–æ–¥—É–ª—å –¥–ª—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤
 * –î–æ–ø–æ–ª–Ω—è–µ—Ç –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –∫–∞—Ç–∞–ª–æ–≥–∞ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–º–∏ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–æ–≤ –º–µ—Ç–æ–¥–∞–º–∏
 */

document.addEventListener('DOMContentLoaded', function() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∫–∞—Ç–∞–ª–æ–≥–∞
    if (!document.getElementById('productsGrid')) {
        return;
    }

    // –°–æ—Å—Ç–æ—è–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤
    const FiltersState = {
        savedFilters: {},
        filterPresets: {},
        isInitialized: false
    };

    // =============================================================================
    // –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø
    // =============================================================================

    function init() {
        // –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤
        loadSavedFilters();
        
        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
        setupAdvancedFilters();
        
        // –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–µ—Å–µ—Ç–æ–≤ —Ñ–∏–ª—å—Ç—Ä–æ–≤
        createFilterPresets();
        
        FiltersState.isInitialized = true;
        console.log('Advanced filters initialized');
    }

    /**
     * –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∏–∑ localStorage
     */
    function loadSavedFilters() {
        const savedFilters = localStorage.getItem('campusMarketplaceFilters');
        if (savedFilters) {
            try {
                FiltersState.savedFilters = JSON.parse(savedFilters);
                applySavedFilters();
            } catch (error) {
                console.error('Error loading saved filters:', error);
            }
        }
    }

    /**
     * –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤
     */
    function applySavedFilters() {
        const filters = FiltersState.savedFilters;
        
        // –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø—Ä–∏—à–µ–ª —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ URL
        const urlParams = new URLSearchParams(window.location.search);
        if (urlParams.toString()) {
            return; // URL –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–º–µ—é—Ç –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç
        }

        // –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∫ UI
        if (filters.category) {
            const categoryRadio = document.querySelector(`input[name="category"][value="${filters.category}"]`);
            if (categoryRadio) categoryRadio.checked = true;
        }

        if (filters.minPrice) {
            const priceMin = document.getElementById('priceMin');
            if (priceMin) priceMin.value = filters.minPrice;
        }

        if (filters.maxPrice) {
            const priceMax = document.getElementById('priceMax');
            if (priceMax) priceMax.value = filters.maxPrice;
        }

        if (filters.condition && filters.condition.length > 0) {
            filters.condition.forEach(condition => {
                const checkbox = document.querySelector(`input[name="condition"][value="${condition}"]`);
                if (checkbox) checkbox.checked = true;
            });
        }

        if (filters.university) {
            const universitySelect = document.getElementById('universityFilter');
            if (universitySelect) universitySelect.value = filters.university;
        }
    }

    /**
     * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤
     */
    function setupAdvancedFilters() {
        // –ö–Ω–æ–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
        createSaveFiltersButton();
        
        // –ë—ã—Å—Ç—Ä—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã
        createQuickFilters();
        
        // –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –æ–ø—Ü–∏–∏
        setupAdvancedOptions();
        
        // –ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤
        setupAutoSave();
    }

    // =============================================================================
    // –°–û–•–†–ê–ù–ï–ù–ò–ï –ò –ó–ê–ì–†–£–ó–ö–ê –§–ò–õ–¨–¢–†–û–í
    // =============================================================================

    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
     */
    function createSaveFiltersButton() {
        const filtersHeader = document.querySelector('.filters-header');
        if (!filtersHeader) return;

        const saveBtn = document.createElement('button');
        saveBtn.className = 'save-filters-btn';
        saveBtn.innerHTML = 'üíæ';
        saveBtn.title = '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã';
        saveBtn.style.cssText = `
            background: none;
            border: none;
            cursor: pointer;
            font-size: 16px;
            padding: 4px;
            margin-left: 8px;
            opacity: 0.7;
            transition: opacity 0.2s ease;
        `;

        saveBtn.addEventListener('mouseover', () => saveBtn.style.opacity = '1');
        saveBtn.addEventListener('mouseout', () => saveBtn.style.opacity = '0.7');
        saveBtn.addEventListener('click', saveCurrentFilters);

        filtersHeader.appendChild(saveBtn);
    }

    /**
     * –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ–∫—É—â–∏—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤
     */
    function saveCurrentFilters() {
        if (!window.CatalogModule) return;

        const currentFilters = window.CatalogModule.state.currentFilters;
        
        // –ò—Å–∫–ª—é—á–∞–µ–º –ø–æ–∏—Å–∫ –∏ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤
        const filtersToSave = {
            category: currentFilters.category,
            minPrice: currentFilters.minPrice,
            maxPrice: currentFilters.maxPrice,
            condition: currentFilters.condition,
            rating: currentFilters.rating,
            university: currentFilters.university,
            sort: currentFilters.sort
        };

        FiltersState.savedFilters = filtersToSave;
        localStorage.setItem('campusMarketplaceFilters', JSON.stringify(filtersToSave));
        
        CampusMarketplace.ui.showNotification('–§–∏–ª—å—Ç—Ä—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã', 'success');
    }

    /**
     * –ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤
     */
    function setupAutoSave() {
        // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –ø—Ä–∏ –∏—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–∏ (—Å –∑–∞–¥–µ—Ä–∂–∫–æ–π)
        let saveTimeout;
        
        const autoSave = () => {
            clearTimeout(saveTimeout);
            saveTimeout = setTimeout(saveCurrentFilters, 2000); // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã –ø–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è
        };

        // –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π —Ñ–∏–ª—å—Ç—Ä–æ–≤
        const filterElements = [
            ...document.querySelectorAll('input[name="category"]'),
            ...document.querySelectorAll('input[name="condition"]'),
            document.getElementById('priceMin'),
            document.getElementById('priceMax'),
            document.getElementById('universityFilter'),
            document.getElementById('sortSelect')
        ].filter(el => el);

        filterElements.forEach(element => {
            element.addEventListener('change', autoSave);
            if (element.type === 'number') {
                element.addEventListener('input', autoSave);
            }
        });
    }

    // =============================================================================
    // –ë–´–°–¢–†–´–ï –§–ò–õ–¨–¢–†–´
    // =============================================================================

    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ –±—ã—Å—Ç—Ä—ã—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤
     */
    function createQuickFilters() {
        const sidebar = document.querySelector('.filters-sidebar');
        if (!sidebar) return;

        const quickFiltersSection = document.createElement('div');
        quickFiltersSection.className = 'filter-section quick-filters';
        quickFiltersSection.innerHTML = `
            <h4>–ë—ã—Å—Ç—Ä—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã</h4>
            <div class="quick-filters-grid">
                <button class="quick-filter-btn" data-filter="new-cheap">
                    üí∞ –î–µ—à–µ–≤–æ –∏ –Ω–æ–≤–æ–µ
                </button>
                <button class="quick-filter-btn" data-filter="textbooks-used">
                    üìö –£—á–µ–±–Ω–∏–∫–∏ –±/—É
                </button>
                <button class="quick-filter-btn" data-filter="rental-electronics">
                    üíª –≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞ –≤ –∞—Ä–µ–Ω–¥—É
                </button>
                <button class="quick-filter-btn" data-filter="high-rated-sellers">
                    ‚≠ê –õ—É—á—à–∏–µ –ø—Ä–æ–¥–∞–≤—Ü—ã
                </button>
            </div>
        `;

        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∏–ª–µ–π –¥–ª—è –±—ã—Å—Ç—Ä—ã—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤
        const style = document.createElement('style');
        style.textContent = `
            .quick-filters-grid {
                display: grid;
                grid-template-columns: 1fr 1fr;
                gap: 8px;
                margin-top: 12px;
            }

            .quick-filter-btn {
                background: linear-gradient(135deg, var(--secondary-background) 0%, var(--white) 100%);
                border: 1px solid var(--border-color);
                border-radius: var(--border-radius-sm);
                padding: 8px 12px;
                font-size: 12px;
                cursor: pointer;
                transition: all var(--transition-fast);
                text-align: center;
                line-height: 1.2;
            }

            .quick-filter-btn:hover {
                background: var(--primary-color);
                color: var(--white);
                transform: translateY(-1px);
                box-shadow: var(--shadow-sm);
            }

            @media (max-width: 768px) {
                .quick-filters-grid {
                    grid-template-columns: 1fr;
                }
            }
        `;
        document.head.appendChild(style);

        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
        const quickFilterBtns = quickFiltersSection.querySelectorAll('.quick-filter-btn');
        quickFilterBtns.forEach(btn => {
            btn.addEventListener('click', () => {
                const filterType = btn.dataset.filter;
                applyQuickFilter(filterType);
            });
        });

        // –í—Å—Ç–∞–≤–∫–∞ –≤ –Ω–∞—á–∞–ª–æ —Å–∞–π–¥–±–∞—Ä–∞ (–ø–æ—Å–ª–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤)
        const filtersHeader = sidebar.querySelector('.filters-header');
        if (filtersHeader && filtersHeader.nextSibling) {
            sidebar.insertBefore(quickFiltersSection, filtersHeader.nextSibling);
        }
    }

    /**
     * –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –±—ã—Å—Ç—Ä–æ–≥–æ —Ñ–∏–ª—å—Ç—Ä–∞
     */
    function applyQuickFilter(filterType) {
        if (!window.CatalogModule) return;

        // –°–±—Ä–æ—Å —Ç–µ–∫—É—â–∏—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤
        window.CatalogModule.clearAllFilters();

        // –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –±—ã—Å—Ç—Ä–æ–≥–æ —Ñ–∏–ª—å—Ç—Ä–∞
        switch (filterType) {
            case 'new-cheap':
                // –ù–æ–≤—ã–µ —Ç–æ–≤–∞—Ä—ã –¥–æ 1000 —Ä—É–±–ª–µ–π
                document.querySelector('input[name="condition"][value="new"]').checked = true;
                document.getElementById('priceMax').value = '1000';
                break;

            case 'textbooks-used':
                // –ë/—É —É—á–µ–±–Ω–∏–∫–∏
                document.querySelector('input[name="category"][value="textbooks"]').checked = true;
                document.querySelector('input[name="condition"][value="good"]').checked = true;
                document.querySelector('input[name="condition"][value="excellent"]').checked = true;
                break;

            case 'rental-electronics':
                // –≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞ –≤ –∞—Ä–µ–Ω–¥—É
                document.querySelector('input[name="category"][value="rental"]').checked = true;
                break;

            case 'high-rated-sellers':
                // –ü—Ä–æ–¥–∞–≤—Ü—ã —Å –≤—ã—Å–æ–∫–∏–º —Ä–µ–π—Ç–∏–Ω–≥–æ–º
                const ratingBtn = document.querySelector('.rating-btn[data-rating="5"]');
                if (ratingBtn) ratingBtn.click();
                break;
        }

        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–∞–ª–æ–≥–∞
        setTimeout(() => {
            if (window.CatalogModule && window.CatalogModule.loadProducts) {
                // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
                updateCatalogFiltersFromUI();
                window.CatalogModule.loadProducts();
            }
        }, 100);

        CampusMarketplace.ui.showNotification(`–ü—Ä–∏–º–µ–Ω–µ–Ω –±—ã—Å—Ç—Ä—ã–π —Ñ–∏–ª—å—Ç—Ä: ${getQuickFilterName(filterType)}`, 'info');
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∫–∞—Ç–∞–ª–æ–≥–∞ –∏–∑ UI
     */
    function updateCatalogFiltersFromUI() {
        if (!window.CatalogModule) return;

        const state = window.CatalogModule.state;
        
        // –ö–∞—Ç–µ–≥–æ—Ä–∏—è
        const selectedCategory = document.querySelector('input[name="category"]:checked');
        state.currentFilters.category = selectedCategory ? selectedCategory.value : 'all';

        // –°–æ—Å—Ç–æ—è–Ω–∏–µ
        const selectedConditions = [...document.querySelectorAll('input[name="condition"]:checked')];
        state.currentFilters.condition = selectedConditions.map(cb => cb.value);

        // –¶–µ–Ω–∞
        const priceMin = document.getElementById('priceMin');
        const priceMax = document.getElementById('priceMax');
        state.currentFilters.minPrice = priceMin.value ? parseInt(priceMin.value) : null;
        state.currentFilters.maxPrice = priceMax.value ? parseInt(priceMax.value) : null;

        // –†–µ–π—Ç–∏–Ω–≥
        const activeRating = document.querySelector('.rating-btn.active');
        state.currentFilters.rating = activeRating ? parseInt(activeRating.dataset.rating) : null;

        // –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç
        const universitySelect = document.getElementById('universityFilter');
        state.currentFilters.university = universitySelect.value || '';

        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤ –≤ UI
        if (window.CatalogModule.updateActiveFilters) {
            window.CatalogModule.updateActiveFilters();
        }
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ñ–∏–ª—å—Ç—Ä–∞
     */
    function getQuickFilterName(filterType) {
        const names = {
            'new-cheap': '–î–µ—à–µ–≤–æ –∏ –Ω–æ–≤–æ–µ',
            'textbooks-used': '–£—á–µ–±–Ω–∏–∫–∏ –±/—É',
            'rental-electronics': '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞ –≤ –∞—Ä–µ–Ω–¥—É',
            'high-rated-sellers': '–õ—É—á—à–∏–µ –ø—Ä–æ–¥–∞–≤—Ü—ã'
        };
        return names[filterType] || filterType;
    }

    // =============================================================================
    // –†–ê–°–®–ò–†–ï–ù–ù–´–ï –û–ü–¶–ò–ò
    // =============================================================================

    /**
     * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã—Ö –æ–ø—Ü–∏–π —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
     */
    function setupAdvancedOptions() {
        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—è "–¢–æ–ª—å–∫–æ —Å —Ñ–æ—Ç–æ"
        addPhotoFilter();
        
        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞ –ø–æ –¥–∞—Ç–µ
        addDateFilter();
        
        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤
        addPopularityFilter();
    }

    /**
     * –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞ "–¢–æ–ª—å–∫–æ —Å —Ñ–æ—Ç–æ"
     */
    function addPhotoFilter() {
        const conditionSection = document.querySelector('.filter-section:has(h4:contains("–°–æ—Å—Ç–æ—è–Ω–∏–µ"))') ||
                                document.querySelector('.filter-section:nth-child(4)'); // –ü—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω—ã–π —Å–µ–ª–µ–∫—Ç–æ—Ä
        
        if (!conditionSection) return;

        const photoFilterHTML = `
            <div class="filter-section">
                <h4>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ</h4>
                <div class="filter-options">
                    <label class="filter-option">
                        <input type="checkbox" name="hasPhoto" value="true">
                        <span class="checkmark"></span>
                        –¢–æ–ª—å–∫–æ —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏
                    </label>
                    <label class="filter-option">
                        <input type="checkbox" name="isNegotiable" value="true">
                        <span class="checkmark"></span>
                        –¢–æ—Ä–≥ —É–º–µ—Å—Ç–µ–Ω
                    </label>
                </div>
            </div>
        `;

        conditionSection.insertAdjacentHTML('afterend', photoFilterHTML);

        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
        const photoCheckbox = document.querySelector('input[name="hasPhoto"]');
        const negotiableCheckbox = document.querySelector('input[name="isNegotiable"]');

        if (photoCheckbox) {
            photoCheckbox.addEventListener('change', () => {
                // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã–ª–∞ –±—ã —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è
                console.log('Photo filter changed:', photoCheckbox.checked);
            });
        }

        if (negotiableCheckbox) {
            negotiableCheckbox.addEventListener('change', () => {
                // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã–ª–∞ –±—ã —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è
                console.log('Negotiable filter changed:', negotiableCheckbox.checked);
            });
        }
    }

    /**
     * –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞ –ø–æ –¥–∞—Ç–µ
     */
    function addDateFilter() {
        const sidebar = document.querySelector('.filters-sidebar');
        if (!sidebar) return;

        const dateFilterHTML = `
            <div class="filter-section date-filter-section">
                <h4>–î–∞—Ç–∞ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è</h4>
                <div class="date-filter-options">
                    <label class="filter-option">
                        <input type="radio" name="dateFilter" value="today">
                        <span class="checkmark"></span>
                        –°–µ–≥–æ–¥–Ω—è
                    </label>
                    <label class="filter-option">
                        <input type="radio" name="dateFilter" value="week">
                        <span class="checkmark"></span>
                        –ó–∞ –Ω–µ–¥–µ–ª—é
                    </label>
                    <label class="filter-option">
                        <input type="radio" name="dateFilter" value="month">
                        <span class="checkmark"></span>
                        –ó–∞ –º–µ—Å—è—Ü
                    </label>
                    <label class="filter-option">
                        <input type="radio" name="dateFilter" value="all" checked>
                        <span class="checkmark"></span>
                        –ó–∞ –≤—Å—ë –≤—Ä–µ–º—è
                    </label>
                </div>
            </div>
        `;

        sidebar.insertAdjacentHTML('beforeend', dateFilterHTML);

        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
        const dateRadios = document.querySelectorAll('input[name="dateFilter"]');
        dateRadios.forEach(radio => {
            radio.addEventListener('change', () => {
                if (radio.checked) {
                    console.log('Date filter changed:', radio.value);
                    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã–ª–∞ –±—ã —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è
                }
            });
        });
    }

    /**
     * –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞ –ø–æ –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏
     */
    function addPopularityFilter() {
        // –≠—Ç–æ—Ç —Ñ–∏–ª—å—Ç—Ä —É–∂–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω —á–µ—Ä–µ–∑ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É, –Ω–æ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç–¥–µ–ª—å–Ω—ã–π —á–µ–∫–±–æ–∫—Å
        const additionalSection = document.querySelector('.date-filter-section');
        if (!additionalSection) return;

        const popularityHTML = `
            <div class="filter-options" style="margin-top: 16px;">
                <label class="filter-option">
                    <input type="checkbox" name="popularOnly" value="true">
                    <span class="checkmark"></span>
                    –¢–æ–ª—å–∫–æ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ (10+ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤)
                </label>
            </div>
        `;

        additionalSection.insertAdjacentHTML('beforeend', popularityHTML);
    }

    // =============================================================================
    // –ü–†–ï–°–ï–¢–´ –§–ò–õ–¨–¢–†–û–í
    // =============================================================================

    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–µ—Å–µ—Ç–æ–≤ —Ñ–∏–ª—å—Ç—Ä–æ–≤
     */
    function createFilterPresets() {
        FiltersState.filterPresets = {
            'students-essentials': {
                name: '–°—Ç—É–¥–µ–Ω—á–µ—Å–∫–∏–π –Ω–∞–±–æ—Ä',
                filters: {
                    category: 'supplies',
                    maxPrice: 500,
                    condition: ['new', 'excellent']
                }
            },
            'budget-textbooks': {
                name: '–ë—é–¥–∂–µ—Ç–Ω—ã–µ —É—á–µ–±–Ω–∏–∫–∏',
                filters: {
                    category: 'textbooks',
                    maxPrice: 1000,
                    condition: ['good', 'fair']
                }
            },
            'premium-electronics': {
                name: '–ü—Ä–µ–º–∏—É–º —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞',
                filters: {
                    category: 'rental',
                    minPrice: 10000,
                    condition: ['new', 'excellent'],
                    rating: 5
                }
            }
        };
    }

    /**
     * –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–µ—Å–µ—Ç–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤
     */
    function applyFilterPreset(presetId) {
        const preset = FiltersState.filterPresets[presetId];
        if (!preset) return;

        // –°–±—Ä–æ—Å —Ç–µ–∫—É—â–∏—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤
        if (window.CatalogModule) {
            window.CatalogModule.clearAllFilters();
        }

        // –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–µ—Å–µ—Ç–∞
        const filters = preset.filters;
        
        // –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∫ UI —ç–ª–µ–º–µ–Ω—Ç–∞–º
        Object.keys(filters).forEach(key => {
            const value = filters[key];
            
            switch (key) {
                case 'category':
                    const categoryRadio = document.querySelector(`input[name="category"][value="${value}"]`);
                    if (categoryRadio) categoryRadio.checked = true;
                    break;
                    
                case 'minPrice':
                    const priceMin = document.getElementById('priceMin');
                    if (priceMin) priceMin.value = value;
                    break;
                    
                case 'maxPrice':
                    const priceMax = document.getElementById('priceMax');
                    if (priceMax) priceMax.value = value;
                    break;
                    
                case 'condition':
                    if (Array.isArray(value)) {
                        value.forEach(condition => {
                            const checkbox = document.querySelector(`input[name="condition"][value="${condition}"]`);
                            if (checkbox) checkbox.checked = true;
                        });
                    }
                    break;
                    
                case 'rating':
                    const ratingBtn = document.querySelector(`.rating-btn[data-rating="${value}"]`);
                    if (ratingBtn) ratingBtn.click();
                    break;
            }
        });

        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–∞–ª–æ–≥–∞
        setTimeout(() => {
            updateCatalogFiltersFromUI();
            if (window.CatalogModule && window.CatalogModule.loadProducts) {
                window.CatalogModule.loadProducts();
            }
        }, 100);

        CampusMarketplace.ui.showNotification(`–ü—Ä–∏–º–µ–Ω–µ–Ω –ø—Ä–µ—Å–µ—Ç: ${preset.name}`, 'info');
    }

    // =============================================================================
    // –ü–£–ë–õ–ò–ß–ù–´–ï –ú–ï–¢–û–î–´
    // =============================================================================

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤
     */
    function getSavedFilters() {
        return FiltersState.savedFilters;
    }

    /**
     * –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–µ—Å–µ—Ç–∞ –ø–æ ID
     */
    function usePreset(presetId) {
        applyFilterPreset(presetId);
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–µ—Å–µ—Ç–æ–≤
     */
    function getAvailablePresets() {
        return Object.keys(FiltersState.filterPresets).map(id => ({
            id,
            name: FiltersState.filterPresets[id].name
        }));
    }

    // =============================================================================
    // –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø
    // =============================================================================

    // –ó–∞–ø—É—Å–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–æ—Å–ª–µ –Ω–µ–±–æ–ª—å—à–æ–π –∑–∞–¥–µ—Ä–∂–∫–∏, —á—Ç–æ–±—ã –¥–∞—Ç—å –∑–∞–≥—Ä—É–∑–∏—Ç—å—Å—è –æ—Å–Ω–æ–≤–Ω–æ–º—É –∫–∞—Ç–∞–ª–æ–≥—É
    setTimeout(init, 500);

    // –≠–∫—Å–ø–æ—Ä—Ç –ø—É–±–ª–∏—á–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤
    window.FiltersModule = {
        getSavedFilters,
        usePreset,
        getAvailablePresets,
        applyQuickFilter,
        saveCurrentFilters,
        isInitialized: () => FiltersState.isInitialized
    };
});
